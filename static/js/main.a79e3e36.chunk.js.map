{"version":3,"sources":["services/api.js","const.js","components/sign-in/sign-in.jsx","store/actions.js","store/user/user.js","util/util.js","store/places/places.js","store/comments/comments.js","store/comment/comment.js","store/root-reducer.js","store/places/selectors.js","components/sign-out/sign-out.jsx","store/api-actions.js","store/user/selectors.js","components/layout/layout.jsx","components/hocs/with-layout.jsx","components/tabs/tabs.jsx","components/main-empty/main-empty.jsx","components/main/main.jsx","components/login/login.jsx","components/not-found/not-found.jsx","components/loading-screen/loading-screen.jsx","browser-history.js","components/app/app.jsx","store/middlewares/redirect.js","reportWebVitals.js","index.js"],"names":["token","localStorage","getItem","AppRoute","cityList","AuthorizationStatus","LoginValue","APIRoute","SortByValues","SignIn","props","className","to","ActionType","changeLoadingCommentProcessStatus","createAction","isLoading","payload","changeIsCommentSendedSuccessfullyStatus","isCommentSendedSuccessfully","showErrorCommentFormMessage","isShowErrorMessage","errorMessageText","changeCity","cityName","changeSortBy","sortByValue","loadPlaces","places","loadNearbyPlaces","nearbyPlaces","removeNearbyPlaces","loadComments","comments","removeComments","changeAuthorizationStatus","status","changeLogin","login","changeFavorite","id","newPlace","logout","resetFavorites","redirectToRoute","url","initialState","authorizationStatus","user","createReducer","builder","addCase","state","action","Util","offerFromServer","adaptedOfferForClient","Object","assign","host","avatarUrl","avatar_url","isPro","is_pro","isFavorite","is_favorite","isPremium","is_premium","maxAdults","max_adults","previewImage","preview_image","placesFromServer","map","place","adaptToClient","commentFromServer","adaptedCommentForClient","comment","date","rating","name","favoritePlaces","Map","forEach","has","city","set","get","push","activeCity","filter","item","listLength","Array","fill","nanoid","Math","round","adaptedPlaceForClient","this","newPlaces","index","findIndex","commonPlaces","nearbyPlacesLinks","nearbyPlace","indexFromCommonPlaces","commonPlace","dispatch","formatDate","dateString","Date","toLocaleDateString","year","month","getSortedPlaces","sortTypeValue","clonedPlaces","slice","sort","firstPlace","secondPlace","price","hotels","_sortByPriceFromHighToLow","_sortByRating","sortBy","isDataLoaded","activeCityName","isNearbyPlacesLoaded","getUpdatedPlaces","resetFavoriteStates","isCommentsLoaded","isCommentSending","isCommentFormSendedSuccessfully","isShowCommentErrorMessage","commentErrorMessage","NameSpace","combineReducers","getPlaces","getIsDataLoaded","getActiveCityName","SignOut","useSelector","useDispatch","onClick","_getState","api","removeItem","delete","then","userLogout","getAuthorizationStatus","getLogin","Layout","children","src","alt","width","height","withLayout","Component","displayName","Tabs","handleTabClick","evt","preventDefault","currentTarget","dataset","MainEmpty","withLayoutMain","filteredPlaces","getFilteredPlaces","length","Login","loginRef","useRef","passwordRef","style","display","xmlns","viewBox","fillRule","clipRule","d","method","onSubmit","email","password","post","info","setItem","data","catch","err","current","value","ref","type","placeholder","required","withLayoutNotFound","margin","textAlign","LoadingScreen","browserHistory","createBrowserHistory","App","history","exact","path","redirect","_store","next","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","getAxiosInstance","store","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","getIsTokenExist","adaptedPlacesToClient","adaptPlacesToClient","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAKMA,EAA0C,OAAlCC,aAAaC,QAAQ,SAAoBD,aAAaC,QAAQ,SAAW,G,OCL1EC,EACL,IADKA,EAEF,SAFEA,EAGA,aAcAC,EAAW,CACtB,QACA,UACA,WACA,YACA,UACA,cAGWC,EACL,OADKA,EAEF,UAGEC,EACG,eAGHC,EACH,UADGA,EAIJ,SAJIA,EAKH,UAGGC,EACF,UADEA,EAEQ,qBAFRA,EAGQ,qBAHRA,EAIM,kB,sBC7BJC,MAbf,SAAgBC,GAEd,OACE,oBAAIC,UAAU,wBAAd,SACE,eAAC,IAAD,CAAMA,UAAU,6CAA6CC,GAAIT,EAAjE,UACE,qBAAKQ,UAAU,gDAEf,sBAAMA,UAAU,gBAAhB,2BCVKE,EACE,oBADFA,EAEK,gBAFLA,EAGE,oBAHFA,EAIS,0BAJTA,EAKW,4BALXA,EAMM,oBANNA,EAOI,wBAPJA,EAQM,0BARNA,EASkB,iCATlBA,EAUG,mBAVHA,EAWH,cAXGA,EAY4B,4CAZ5BA,EAaiB,sCAbjBA,EAgBgC,+CAhBhCA,EAiBM,wBAjBNA,EAkBQ,yBAGRC,EAAoCC,YAC/CF,GACA,SAACG,GAAD,MAAgB,CAACC,QAASD,MAGfE,EAA0CH,YACrDF,GACA,SAACM,GAAD,MAAkC,CAACF,QAASE,MAGjCC,EAA8BL,YACzCF,GACA,SAACQ,EAAoBC,GAArB,MAA2C,CAACL,QAAS,CAACI,qBAAoBC,wBAG/DC,EAAaR,YACxBF,GACA,SAACW,GAAD,MAAe,CAACP,QAASO,MAGdC,EAAeV,YAC1BF,GACA,SAACa,GAAD,MAAkB,CAACT,QAASS,MAGjBC,EAAaZ,YACxBF,GACA,SAACe,GAAD,MAAa,CAACX,QAASW,MAGZC,EAAmBd,YAC9BF,GACA,SAACiB,GAAD,MAAmB,CAACb,QAASa,MAGlBC,GAAqBhB,YAAaF,GAElCmB,GAAejB,YAC1BF,GACA,SAACoB,GAAD,MAAe,CAAChB,QAASgB,MAGdC,GAAiBnB,YAAaF,GAE9BsB,GAA4BpB,YACvCF,GACA,SAACuB,GAAD,MAAa,CAACnB,QAASmB,MAGZC,GAActB,YACzBF,GACA,SAACyB,GAAD,MAAY,CAACrB,QAASqB,MAGXC,GAAiBxB,YAC5BF,GACA,SAAC2B,EAAIC,GAAL,MAAmB,CAACxB,QAAS,CAACuB,KAAIC,gBAGvBC,GAAS3B,YAAaF,GAEtB8B,GAAiB5B,YAC5BF,GACA,SAACe,GAAD,MAAa,CAACX,QAASW,MAGZgB,GAAkB7B,YAC7BF,GACA,SAACgC,GAAD,MAAU,CAAC5B,QAAS4B,M,kBCjFhBC,GAAe,CACnBC,oBAAqB1C,EACrBiC,MAAOhC,GAGH0C,GAAOC,YAAcH,IAAc,SAACI,GACxCA,EACGC,QAAQhB,IAA2B,SAACiB,EAAOC,GAC1CD,EAAML,oBAAsBM,EAAOpC,WAEpCkC,QAAQd,IAAa,SAACe,EAAOC,GAC5BD,EAAMd,MAAQe,EAAOpC,WAEtBkC,QAAQT,IAAQ,SAACU,GAChBA,EAAML,oBAAsB1C,EAC5B+C,EAAMd,MAAQhC,Q,+CCddgD,G,oGACJ,SAAqBC,GACnB,IAAMC,EAAwBC,OAAOC,OACnC,GACAH,EACA,CACEI,KAAMF,OAAOC,OACX,GACAH,EAAgBI,KAChB,CACEC,UAAWL,EAAgBI,KAAKE,WAChCC,MAAOP,EAAgBI,KAAKI,SAGhCC,WAAYT,EAAgBU,YAC5BC,UAAWX,EAAgBY,WAC3BC,UAAWb,EAAgBc,WAC3BC,aAAcf,EAAgBgB,gBAalC,cAROf,EAAsBG,KAAKE,kBAC3BL,EAAsBG,KAAKI,cAE3BP,EAAsBS,mBACtBT,EAAsBW,kBACtBX,EAAsBa,kBACtBb,EAAsBe,cAEtBf,I,iCAGT,SAA2BgB,GAAmB,IAAD,OAC3C,OAAOA,EAAiBC,KAAI,SAACC,GAAD,OAAW,EAAKC,cAAcD,Q,kCAG5D,SAA4BE,GAC1B,IAAMC,EAA0BpB,OAAOC,OACrC,GACAkB,EACA,CACEE,QAASF,EAAkBE,QAC3BC,KAAMH,EAAkBG,KACxBvC,GAAIoC,EAAkBpC,GACtBwC,OAAQJ,EAAkBI,OAC1BhC,KAAMS,OAAOC,OACX,GACAkB,EAAkB5B,KAClB,CACEY,UAAWgB,EAAkB5B,KAAKa,WAClCC,MAAOc,EAAkB5B,KAAKe,OAC9BvB,GAAIoC,EAAkB5B,KAAKR,GAC3ByC,KAAML,EAAkB5B,KAAKiC,SAUrC,cAHOJ,EAAwB7B,KAAKa,kBAC7BgB,EAAwB7B,KAAKe,OAE7Bc,I,8CAGT,SAAwCjD,GACtC,IAAMsD,EAAiB,IAAIC,IAa3B,OAXAvD,EAAOwD,SAAQ,SAACV,GACVA,EAAMV,aACJkB,EAAeG,IAAIX,EAAMY,KAAKL,OAGhCC,EAAeK,IAAIb,EAAMY,KAAKL,KAAM,IAFpCC,EAAeM,IAAId,EAAMY,KAAKL,MAAMQ,KAAKf,OAQxCQ,I,+BAGT,SAAyBQ,EAAY9D,GAGnC,OADiBA,EAAO+D,QAAO,SAACC,GAAD,OAAUA,EAAKN,KAAKL,OAASS,O,4BAU9D,SAAsBG,GAGpB,OAFa,IAAIC,MAAMD,GAAYE,KAAK,IACXtB,KAAI,kBAAMuB,KAAO,S,8BAIhD,SAAwBhB,GAGtB,OJ3GuB,IIyGDiB,KAAKC,MAAMlB,GJ1GX,I,8BIsIxB,SAAwBxC,EAAIZ,EAAQa,GAClC,IAAM0D,EAAwBC,KAAKzB,cAAclC,GAC3C4D,EAAS,aAAOzE,GAChB0E,EAAQD,EAAUE,WAAU,SAAC7B,GAAD,OAAWA,EAAMlC,KAAOA,KAE1D,OADA6D,EAAUC,GAAOtC,WAAamC,EAAsBnC,WAC7CqC,I,6CAGT,SAAuCvE,EAAc0E,GACnD,IAAMC,EAAoB,GAO1B,OALA3E,EAAasD,SAAQ,SAACsB,GACpB,IAAMC,EAAwBH,EAAaD,WAAU,SAACK,GAAD,OAAiBA,EAAYpE,KAAOkE,EAAYlE,MACrGiE,EAAkBhB,KAAKe,EAAaG,OAG/BF,I,iCAGT,SAA2B7E,GACzB,OAAOA,EAAO6C,KAAI,SAACC,GAEjB,OADAA,EAAK,2BAAOA,GAAP,IAAcV,YAAY,S,6BAKnC,SAAuB6C,GACiB,OAAlC5G,aAAaC,QAAQ,WACvB2G,EAASxE,GAAYpC,aAAaC,QAAQ,WAC1C2G,EAAS1E,GAA0B9B,S,KA/JnCiD,GAyFGwD,WAAa,SAACC,GAGnB,OAAQ,IAAIC,KAAKD,GAAaE,mBAAmB,QAF5B,CAACC,KAAM,UAAWC,MAAO,WA1F5C7D,GA2GG8D,gBAAkB,SAACC,EAAezF,GACvC,IAAM0F,EAAe1F,EAAO2F,QAQ5B,OAAQF,GACN,KAAK7G,EACH,OAAO8G,EACT,KAAK9G,EACH,OAAiCoB,EAVgB4F,MAAK,SAACC,EAAYC,GAAb,OAA6BD,EAAWE,MAAQD,EAAYC,SAWpH,KAAKnH,EACH,OAV8B,SAACoH,GAAD,OAAYA,EAAOJ,MAAK,SAACC,EAAYC,GAAb,OAA6BA,EAAYC,MAAQF,EAAWE,SAU3GE,CAA0BjG,GACnC,KAAKpB,EACH,OAVkB,SAACoH,GAAD,OAAYA,EAAOJ,MAAK,SAACC,EAAYC,GAAb,OAA6BA,EAAY1C,OAASyC,EAAWzC,UAUhG8C,CAAclG,GACvB,QACE,OAAO0F,IAsCAhE,I,GAAAA,MCjKTR,GAAe,CACnBlB,OAAQ,GACRmG,OAAQvH,EACRwH,cAAc,EACdC,eAAgB,QAChBC,sBAAsB,EACtBpG,aAAc,IAGVF,GAASqB,YAAcH,IAAc,SAACI,GAC1CA,EACGC,QAAQ5B,GAAY,SAAC6B,EAAOC,GAC3BD,EAAM6E,eAAiB5E,EAAOpC,WAE/BkC,QAAQ1B,GAAc,SAAC2B,EAAOC,GAC7BD,EAAM2E,OAAS1E,EAAOpC,WAEvBkC,QAAQxB,GAAY,SAACyB,EAAOC,GAC3BD,EAAMxB,OAASyB,EAAOpC,QACtBmC,EAAM4E,cAAe,KAEtB7E,QAAQtB,GAAkB,SAACuB,EAAOC,GACjCD,EAAMtB,aAAeuB,EAAOpC,QAC5BmC,EAAM8E,sBAAuB,KAE9B/E,QAAQpB,IAAoB,SAACqB,GAC5BA,EAAMtB,aAAe,GACrBsB,EAAM8E,sBAAuB,KAE9B/E,QAAQZ,IAAgB,SAACa,EAAOC,GAC/BD,EAAMxB,OAAS0B,GAAK6E,iBAAiB9E,EAAOpC,QAAQuB,GAAIY,EAAMxB,OAAQyB,EAAOpC,QAAQwB,aAEtFU,QAAQR,IAAgB,SAACS,EAAOC,GAC/BD,EAAMxB,OAAS0B,GAAK8E,oBAAoB/E,EAAOpC,eCvC/CgB,GAAWgB,YALI,CACnBhB,SAAU,GACVoG,kBAAkB,IAGyB,SAACnF,GAC5CA,EACGC,QAAQnB,IAAc,SAACoB,EAAOC,GAC7BD,EAAMnB,SAAWoB,EAAOpC,QACxBmC,EAAMiF,kBAAmB,KAE1BlF,QAAQjB,IAAgB,SAACkB,GACxBA,EAAMnB,SAAW,GACjBmB,EAAMiF,kBAAmB,QCDzBvD,GAAU7B,YAPK,CACnBqF,kBAAkB,EAClBC,gCAAiC,KACjCC,2BAA2B,EAC3BC,oBAAqB,OAGqB,SAACvF,GAC3CA,EACGC,QAAQrC,GAAmC,SAACsC,EAAOC,GAClDD,EAAMkF,iBAAmBjF,EAAOpC,WAEjCkC,QAAQjC,GAAyC,SAACkC,EAAOC,GACxDD,EAAMmF,gCAAkClF,EAAOpC,WAEhDkC,QAAQ/B,GAA6B,SAACgC,EAAOC,GAC5CD,EAAMoF,0BAA4BnF,EAAOpC,QAAQI,mBACjD+B,EAAMqF,oBAAsBpF,EAAOpC,QAAQK,uBCnBpCoH,GACH,SADGA,GAED,WAFCA,GAGL,OAHKA,GAIF,UAGIC,iBAAe,sBAC3BD,GAAiB1F,IADU,gBAE3B0F,GAAmB9G,IAFQ,gBAG3B8G,GAAqBzG,IAHM,gBAI3ByG,GAAoB5D,IAJO,KCXjB8D,GAAY,SAACxF,GAAD,OAAWA,EAAMsF,IAAkB9G,QAC/CiH,GAAkB,SAACzF,GAAD,OAAWA,EAAMsF,IAAkBV,cACrDc,GAAoB,SAAC1F,GAAD,OAAWA,EAAMsF,IAAkBT,gBC0CrDc,OApCf,SAAiBrI,GACf,IAAO4B,EAAS5B,EAAT4B,MACDV,EAASoH,YAAYJ,IAErB/B,EAAWoC,cAMjB,OACE,eAAC,WAAD,WACE,oBAAItI,UAAU,wBAAd,SACE,eAAC,IAAD,CAAMA,UAAU,6CAA6CC,GAAIT,EAAjE,UACE,qBAAKQ,UAAU,gDAEf,sBAAMA,UAAU,+BAAhB,SAAgD2B,SAGpD,oBAAI3B,UAAU,mBAAd,SACE,cAAC,IAAD,CACEA,UAAU,mBACVC,GAAIT,EACJ+I,QAlBwB,WAC9BrC,GCwEwB,SAACA,EAAUsC,EAAWC,GAChDnJ,aAAaoJ,WAAW,SACxBpJ,aAAaoJ,WAAW,SAExBD,EAAIE,OAAO/I,GACRgJ,MAAK,WACJ1C,EAAS2C,YD7EX3C,EAASlE,GAAef,KAapB,SAKE,sBAAMjB,UAAU,kBAAhB,8BEjCG8I,GAAyB,SAACrG,GAAD,OAAWA,EAAMsF,IAAgB3F,qBAC1D2G,GAAW,SAACtG,GAAD,OAAWA,EAAMsF,IAAgBpG,OC0C1CqH,OAnCf,SAAgBjJ,GACd,IAAOkJ,EAAuBlJ,EAAvBkJ,SAAUjJ,EAAaD,EAAbC,UACX2B,EAAQ0G,YAAYU,IACpB3G,EAAsBiG,YAAYS,IAExC,OACE,sBAAK9I,UAAWA,EAAhB,UACE,wBAAQA,UAAU,SAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAMA,UAAU,8CAA8CC,GAAG,IAAjE,SACE,qBAAKD,UAAU,eAAekJ,IAAI,eAAeC,IAAI,gBAAgBC,MAAM,KAAKC,OAAO,WAG3F,qBAAKrJ,UAAU,cAAf,SACE,oBAAIA,UAAU,mBAAd,SACGoC,IAAwB1C,EACrB,cAAC,GAAD,CAASiC,MAAOA,IAChB,cAAC,EAAD,eAMbsH,MChCDK,GAAa,SAACC,EAAWvJ,GAAZ,OACjB,SAAiBD,GACf,OACE,cAAC,GAAD,CAAQC,UAAWA,EAAnB,SACE,cAACuJ,EAAD,eAAexJ,QAKvBuJ,GAAWE,YAAc,aAEVF,UC2BAG,OAhCf,SAAc1J,GACZ,IAAMuH,EAAiBe,YAAYF,IAC7BjC,EAAWoC,cAEXoB,EAAiB,SAACC,GACtBA,EAAIC,iBACJ1D,EAAStF,EAAW+I,EAAIE,cAAcC,QAAQnF,OAC9CuB,EAASpF,EAAajB,KAGxB,OACE,qBAAKG,UAAU,OAAf,SACE,yBAASA,UAAU,sBAAnB,SACE,oBAAIA,UAAU,6BAAd,SACGP,EAASqE,KAAI,SAACa,GAAD,OACZ,oBAAI3E,UAAU,kBAAd,SACE,cAAC,IAAD,CACE,YAAW2E,EACX3E,UAAS,0CAAsC2E,IAAS2C,GAAkB,sBAC1ErH,GAAG,IACHsI,QAASmB,EAJX,SAME,+BAAO/E,OAP0BA,aCClCoF,OAtBf,SAAmBhK,GACjB,IAAOuH,EAAkBvH,EAAlBuH,eAEP,OACE,qBAAKtH,UAAU,SAAf,SACE,sBAAKA,UAAU,qEAAf,UACE,yBAASA,UAAU,oBAAnB,SACE,sBAAKA,UAAU,uCAAf,UACE,mBAAGA,UAAU,iBAAb,yCACA,oBAAGA,UAAU,6BAAb,uEAAqGsH,UAGzG,qBAAKtH,UAAU,gCCwBvB,IACegK,GADQV,IA7BvB,WACE,IAAMhC,EAAiBe,YAAYF,IAC7BlH,EAASoH,YAAYJ,IAErBgC,EAAiBtH,GAAKuH,kBAAkB5C,EAAgBrG,GAE9D,OACE,uBAAMjB,UAAU,+BAAhB,UACE,oBAAIA,UAAU,kBAAd,oBACA,cAAC,GAAD,IAE4B,IAA1BiK,EAAeE,OACX,cAAC,GAAD,CAAW7C,eAAgBA,IAE3B,qBAAKtH,UAAU,SAAf,SACE,qBAAKA,UAAU,qCAAf,SACE,0BAASA,UAAU,wBAAnB,UACE,oBAAIA,UAAU,kBAAd,oBACA,oBAAGA,UAAU,gBAAb,UAA8BiK,EAAeE,OAA7C,sBAAwE7C,kBCoE3E8C,OAzFf,WACE,IAAMC,EAAWC,mBACXC,EAAcD,mBACdpE,EAAWoC,cAWjB,OACE,eAAC,WAAD,WACE,qBAAKkC,MAAO,CAACC,QAAS,QAAtB,SACE,sBAAKC,MAAM,6BAAX,UAAwC,wBAAQ7I,GAAG,oBAAoB8I,QAAQ,UAAvC,SAAiD,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,gDAAuD,wBAAQjJ,GAAG,gBAAgB8I,QAAQ,YAAnC,SAA+C,sBAAMG,EAAE,+IAAsJ,wBAAQjJ,GAAG,YAAY8I,QAAQ,YAA/B,SAA2C,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,yHAEte,sBAAK9K,UAAU,8BAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAMA,UAAU,oBAAoBC,GAAG,IAAvC,SACE,qBAAKD,UAAU,eAAekJ,IAAI,eAAeC,IAAI,gBAAgBC,MAAO,GAAIC,OAAQ,SAG5F,qBAAKrJ,UAAU,cAAf,SACE,oBAAIA,UAAU,8BAMtB,sBAAMA,UAAU,+BAAhB,SACE,sBAAKA,UAAU,kCAAf,UACE,0BAASA,UAAU,QAAnB,UACE,oBAAIA,UAAU,eAAd,qBACA,uBACEA,UAAU,mBACV0C,OAAO,GACPqI,OAAO,OACPC,SAtCO,SAACrB,GACpBA,EAAIC,iBAEJ1D,EPoCiB,SAAC,GAAD,IAAS+E,EAAT,EAAEtJ,MAAcuJ,EAAhB,EAAgBA,SAAhB,OAA8B,SAAChF,EAAUsC,EAAWC,GACvEnJ,aAAaoJ,WAAW,SACxBpJ,aAAaoJ,WAAW,SACxBD,EAAI0C,KAAKvL,EAAgB,CAACqL,QAAOC,aAC9BtC,MAAK,SAACwC,GACL9L,aAAa+L,QAAQ,QAASD,EAAKE,KAAKjM,OACxCC,aAAa+L,QAAQ,QAASD,EAAKE,KAAKL,OACxC/E,EAASxE,GAAY0J,EAAKE,KAAKL,QAC/B/E,EAAS1E,GAA0B9B,IACnCwG,EAASjE,GAAgBzC,OAE1B+L,OAAM,SAACC,QO/CC7J,CAAM,CACbA,MAAO0I,EAASoB,QAAQC,MACxBR,SAAUX,EAAYkB,QAAQC,UA6BtB,UAME,sBAAK1L,UAAU,2CAAf,UACE,uBAAOA,UAAU,kBAAjB,oBACA,uBACE2L,IAAKtB,EACLrK,UAAU,2BACV4L,KAAK,QACLtH,KAAK,QACLuH,YAAY,QACZC,UAAQ,OAGZ,sBAAK9L,UAAU,2CAAf,UACE,uBAAOA,UAAU,kBAAjB,sBACA,uBACE2L,IAAKpB,EACLvK,UAAU,2BACV4L,KAAK,WACLtH,KAAK,WACLuH,YAAY,WACZC,UAAQ,OAGZ,wBACE9L,UAAU,oCACV4L,KAAK,SAFP,2BAQJ,yBAAS5L,UAAU,gDAAnB,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,uBAAuBC,GAAG,IAA1C,SACE,+DCzElB,IACe8L,GADYzC,IAT3B,WACE,OACE,sBAAKkB,MAAO,CAACwB,OAAQ,OAAQ5C,MAAO,SAApC,UACE,oBAAIoB,MAAO,CAACyB,UAAW,UAAvB,iBACA,sDCCSC,OANf,WACE,OACE,4C,QCAWC,GAFQC,eCoCRC,OA1Bf,WAGE,OAFqBhE,YAAYH,IAS/B,cAAC,IAAD,CAAeoE,QAASH,GAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAMhN,EAAnB,SACE,cAAC,GAAD,CAAMQ,UAAU,kCAElB,cAAC,IAAD,CAAOuM,OAAK,EAACC,KAAMhN,EAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,WAdJ,cAAC,GAAD,KCdOiN,GAAW,SAACC,GAAD,OAAY,SAACC,GAAD,OAAU,SAACjK,GAK7C,OAJIA,EAAOkJ,OAAS1L,GAClBiM,GAAerH,KAAKpC,EAAOpC,SAGtBqM,EAAKjK,MCICkK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCORpE,G1BP0B,WAC9B,IAAM2E,EAAgBC,IAAMC,OAAO,CACjCC,QAPgB,2CAQhBC,QAPoB,IAQpBC,QAAS,CACP,UAAWpO,KAUf,OAFA+N,EAAcM,aAAaC,SAASC,KAJlB,SAACD,GAAD,OAAcA,KAEjB,eAIRP,E0BRGS,GAENC,GAAQC,YAAe,CAC3BC,QAASC,GACTC,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,MAAO,CACLC,cAAe5F,MAEhB6F,OAAO7B,OAGd9J,GAAK4L,gBAAgBT,GAAM5H,UAC3B4H,GAAM5H,UdV+B,SAACA,EAAUsC,EAAWC,GAAtB,OACnCA,EAAI5D,IAAIjF,GACLgJ,MAAK,YAAa,IAAX0C,EAAU,EAAVA,KACAkD,EAAwB7L,GAAK8L,oBAAoBnD,GACvDpF,EAASlF,EAAWwN,OAErBjD,OAAM,SAACC,UcMZkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUd,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJe,SAASC,eAAe,SAK1BlC,O","file":"static/js/main.a79e3e36.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nconst token = localStorage.getItem('token') !== null ? localStorage.getItem('token') : '';\n\nexport const getAxiosInstance = () => {\n  const axiosInstance = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n      'x-token': token,\n    },\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = () => {};\n\n  axiosInstance.interceptors.response.use(onSuccess, onFail);\n\n  return axiosInstance;\n};\n","export const AppRoute = {\n  MAIN: '/',\n  SIGN_IN: '/login',\n  FAVORITES: '/favorites',\n  ROOM: '/offer/:id',\n};\n\nexport const MAX_RATING = 5;\nexport const MAX_PERCENT = 100;\nexport const MAX_COMMENTS_AMOUNT = 10;\n\nexport const ZOOM = 12;\n\nexport const URL_MARKER_DEFAULT = 'img/pin.svg';\n\nexport const URL_MARKER_CURRENT = 'img/pin-active.svg';\n\nexport const cityList = [\n  'Paris',\n  'Cologne',\n  'Brussels',\n  'Amsterdam',\n  'Hamburg',\n  'Dusseldorf',\n];\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n};\n\nexport const LoginValue = {\n  UNAUTHORIZED: 'UNAUTHORIZED',\n};\n\nexport const APIRoute = {\n  HOTELS: '/hotels',\n  FAVORITE: '/favorite',\n  COMMENTS: '/comments',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n};\n\nexport const SortByValues = {\n  POPULAR: 'Popular',\n  PRICE_LOW_TO_HIGH: 'Price: low to high',\n  PRICE_HIGH_TO_LOW: 'Price: high to low',\n  TOP_RATED_FIRST: 'Top rated first',\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\n\nfunction SignIn(props) {\n\n  return (\n    <li className=\"header__nav-item user\">\n      <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.SIGN_IN}>\n        <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n        </div>\n        <span className=\"header__login\">Sign in</span>\n      </Link>\n    </li>\n  );\n}\n\nexport default SignIn;\n","import {createAction} from '@reduxjs/toolkit';\n\nexport const ActionType = {\n  CHANGE_CITY: 'places/changeCity',\n  CHANGE_SORT_BY: 'places/sortBy',\n  LOAD_PLACES: 'places/loadPlaces',\n  LOAD_NEARBY_PLACES: 'places/loadNearbyPlaces',\n  REMOVE_NEARBY_PLACES: 'places/removeNearbyPlaces',\n  CHANGE_FAVORITE: 'places/isFavorite',\n  LOAD_COMMENTS: 'comments/loadComments',\n  REMOVE_COMMENTS: 'comments/removeComments',\n  CHANGE_AUTHORIZATION_STATUS: 'user/changeAuthorizationStatus',\n  CHANGE_LOGIN: 'user/changeLogin',\n  LOGOUT: 'user/logout',\n  CHANGE_LOADING_COMMENT_PROCESS_STATUS: 'comment/changeLoadingCommentProcessStatus',\n  SHOW_COMMENT_ERROR_MESSAGE: 'comment/showErrorCommentFormMessage',\n  SEND_COMMENT: 'comment/sendComment',\n  SEND_COMMENT_RATING: 'comment/sendCommentRating',\n  CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS: 'comment/changeCommentSendedSuccessfulyStatus',\n  RESET_FAVORITES: 'places/resetFavorites',\n  REDIRECT_TO_ROUTE: 'places/redirectToRoute',\n};\n\nexport const changeLoadingCommentProcessStatus = createAction(\n  ActionType.CHANGE_LOADING_COMMENT_PROCESS_STATUS,\n  (isLoading) => ({payload: isLoading}),\n);\n\nexport const changeIsCommentSendedSuccessfullyStatus = createAction(\n  ActionType.CHANGE_COMMENT_SENDED_SUCCESSFULLY_STATUS,\n  (isCommentSendedSuccessfully) => ({payload: isCommentSendedSuccessfully}),\n);\n\nexport const showErrorCommentFormMessage = createAction(\n  ActionType.SHOW_COMMENT_ERROR_MESSAGE,\n  (isShowErrorMessage, errorMessageText) => ({payload: {isShowErrorMessage, errorMessageText}}),\n);\n\nexport const changeCity = createAction(\n  ActionType.CHANGE_CITY,\n  (cityName) => ({payload: cityName}),\n);\n\nexport const changeSortBy = createAction(\n  ActionType.CHANGE_SORT_BY,\n  (sortByValue) => ({payload: sortByValue}),\n);\n\nexport const loadPlaces = createAction(\n  ActionType.LOAD_PLACES,\n  (places) => ({payload: places}),\n);\n\nexport const loadNearbyPlaces = createAction(\n  ActionType.LOAD_NEARBY_PLACES,\n  (nearbyPlaces) => ({payload: nearbyPlaces}),\n);\n\nexport const removeNearbyPlaces = createAction(ActionType.REMOVE_NEARBY_PLACES);\n\nexport const loadComments = createAction(\n  ActionType.LOAD_COMMENTS,\n  (comments) => ({payload: comments}),\n);\n\nexport const removeComments = createAction(ActionType.REMOVE_COMMENTS);\n\nexport const changeAuthorizationStatus = createAction(\n  ActionType.CHANGE_AUTHORIZATION_STATUS,\n  (status) => ({payload: status}),\n);\n\nexport const changeLogin = createAction(\n  ActionType.CHANGE_LOGIN,\n  (login) => ({payload: login}),\n);\n\nexport const changeFavorite = createAction(\n  ActionType.CHANGE_FAVORITE,\n  (id, newPlace) => ({payload: {id, newPlace}}),\n);\n\nexport const logout = createAction(ActionType.LOGOUT);\n\nexport const resetFavorites = createAction(\n  ActionType.RESET_FAVORITES,\n  (places) => ({payload: places}),\n);\n\nexport const redirectToRoute = createAction(\n  ActionType.REDIRECT_TO_ROUTE,\n  (url) => ({payload: url}),\n);\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {\n  changeAuthorizationStatus,\n  changeLogin,\n  logout\n} from '../actions';\n\nimport {AuthorizationStatus, LoginValue} from '../../const';\n\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.NO_AUTH,\n  login: LoginValue.UNAUTHORIZED,\n};\n\nconst user = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeAuthorizationStatus, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(changeLogin, (state, action) => {\n      state.login = action.payload;\n    })\n    .addCase(logout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NO_AUTH;\n      state.login = LoginValue.UNAUTHORIZED;\n    });\n});\n\nexport {user};\n","import nanoid from 'nanoid';\n\nimport {\n  MAX_RATING,\n  MAX_PERCENT,\n  SortByValues\n} from '../const';\n\nimport {changeLogin, changeAuthorizationStatus} from '../store/actions';\nimport {AuthorizationStatus} from '../const';\n\nclass Util {\n  static adaptToClient(offerFromServer) {\n    const adaptedOfferForClient = Object.assign(\n      {},\n      offerFromServer,\n      {\n        host: Object.assign(\n          {},\n          offerFromServer.host,\n          {\n            avatarUrl: offerFromServer.host.avatar_url,\n            isPro: offerFromServer.host.is_pro,\n          },\n        ),\n        isFavorite: offerFromServer.is_favorite,\n        isPremium: offerFromServer.is_premium,\n        maxAdults: offerFromServer.max_adults,\n        previewImage: offerFromServer.preview_image,\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedOfferForClient.host.avatar_url;\n    delete adaptedOfferForClient.host.is_pro;\n\n    delete adaptedOfferForClient.is_favorite;\n    delete adaptedOfferForClient.is_premium;\n    delete adaptedOfferForClient.max_adults;\n    delete adaptedOfferForClient.preview_image;\n\n    return adaptedOfferForClient;\n  }\n\n  static adaptPlacesToClient(placesFromServer) {\n    return placesFromServer.map((place) => this.adaptToClient(place));\n  }\n\n  static adaptCommentToClient(commentFromServer) {\n    const adaptedCommentForClient = Object.assign(\n      {},\n      commentFromServer,\n      {\n        comment: commentFromServer.comment,\n        date: commentFromServer.date,\n        id: commentFromServer.id,\n        rating: commentFromServer.rating,\n        user: Object.assign(\n          {},\n          commentFromServer.user,\n          {\n            avatarUrl: commentFromServer.user.avatar_url,\n            isPro: commentFromServer.user.is_pro,\n            id: commentFromServer.user.id,\n            name: commentFromServer.user.name,\n          },\n        ),\n      },\n    );\n\n    // Ненужные ключи мы удаляем\n    delete adaptedCommentForClient.user.avatar_url;\n    delete adaptedCommentForClient.user.is_pro;\n\n    return adaptedCommentForClient;\n  }\n\n  static getFavoritePlacesSeparatedByCity(places) {\n    const favoritePlaces = new Map();\n\n    places.forEach((place) => {\n      if (place.isFavorite) {\n        if (favoritePlaces.has(place.city.name)) {\n          favoritePlaces.get(place.city.name).push(place);\n        } else {\n          favoritePlaces.set(place.city.name, []);\n          favoritePlaces.get(place.city.name).push(place);\n        }\n      }\n    });\n\n    return favoritePlaces;\n  }\n\n  static getFilteredPlaces(activeCity, places) {\n    let filteredPlaces = [];\n    filteredPlaces = places.filter((item) => item.city.name === activeCity);\n    return filteredPlaces;\n  }\n\n  static formatDate = (dateString) => {\n    const DATE_OPTIONS = {year: 'numeric', month: 'short'};\n\n    return (new Date(dateString)).toLocaleDateString('en-US', DATE_OPTIONS);\n  }\n\n  static generateIdKeys(listLength) {\n    const list = new Array(listLength).fill('');\n    const generatedIdList = list.map(() => nanoid(10));\n    return generatedIdList;\n  }\n\n  static getWidthByRating(rating) {\n    const roundedRating = Math.round(rating);\n    const widthValue = (MAX_PERCENT * roundedRating) / MAX_RATING;\n    return widthValue;\n  }\n\n  static getSortedPlaces = (sortTypeValue, places) => {\n    const clonedPlaces = places.slice();\n\n    const _sortByPriceFromLowToHigh = (hotels) => hotels.sort((firstPlace, secondPlace) => firstPlace.price - secondPlace.price);\n\n    const _sortByPriceFromHighToLow = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.price - firstPlace.price);\n\n    const _sortByRating = (hotels) => hotels.sort((firstPlace, secondPlace) => secondPlace.rating - firstPlace.rating);\n\n    switch (sortTypeValue) {\n      case SortByValues.POPULAR:\n        return clonedPlaces;\n      case SortByValues.PRICE_LOW_TO_HIGH:\n        return _sortByPriceFromLowToHigh(places);\n      case SortByValues.PRICE_HIGH_TO_LOW:\n        return _sortByPriceFromHighToLow(places);\n      case SortByValues.TOP_RATED_FIRST:\n        return _sortByRating(places);\n      default:\n        return clonedPlaces;\n    }\n  }\n\n  static getUpdatedPlaces(id, places, newPlace) {\n    const adaptedPlaceForClient = this.adaptToClient(newPlace);\n    const newPlaces = [...places];\n    const index = newPlaces.findIndex((place) => place.id === id);\n    newPlaces[index].isFavorite = adaptedPlaceForClient.isFavorite;\n    return newPlaces;\n  }\n\n  static getNearbyPlacesFromCommonPlaces(nearbyPlaces, commonPlaces) {\n    const nearbyPlacesLinks = [];\n\n    nearbyPlaces.forEach((nearbyPlace) => {\n      const indexFromCommonPlaces = commonPlaces.findIndex((commonPlace) => commonPlace.id === nearbyPlace.id);\n      nearbyPlacesLinks.push(commonPlaces[indexFromCommonPlaces]);\n    });\n\n    return nearbyPlacesLinks;\n  }\n\n  static resetFavoriteStates(places) {\n    return places.map((place) => {\n      place = {...place, isFavorite: false};\n      return place;\n    });\n  }\n\n  static getIsTokenExist(dispatch) {\n    if (localStorage.getItem('token') !== null) {\n      dispatch(changeLogin(localStorage.getItem('login')));\n      dispatch(changeAuthorizationStatus(AuthorizationStatus.AUTH));\n    }\n  }\n}\n\nexport default Util;\n","import {createReducer} from '@reduxjs/toolkit';\nimport {SortByValues} from '../../const';\nimport Util from '../../util/util';\n\nimport {\n  changeCity,\n  changeSortBy,\n  loadPlaces,\n  loadNearbyPlaces,\n  removeNearbyPlaces,\n  changeFavorite,\n  resetFavorites\n} from '../actions';\n\nconst initialState = {\n  places: [],\n  sortBy: SortByValues.POPULAR,\n  isDataLoaded: false,\n  activeCityName: 'Paris',\n  isNearbyPlacesLoaded: false,\n  nearbyPlaces: [],\n};\n\nconst places = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeCity, (state, action) => {\n      state.activeCityName = action.payload;\n    })\n    .addCase(changeSortBy, (state, action) => {\n      state.sortBy = action.payload;\n    })\n    .addCase(loadPlaces, (state, action) => {\n      state.places = action.payload;\n      state.isDataLoaded = true;\n    })\n    .addCase(loadNearbyPlaces, (state, action) => {\n      state.nearbyPlaces = action.payload;\n      state.isNearbyPlacesLoaded = true;\n    })\n    .addCase(removeNearbyPlaces, (state) => {\n      state.nearbyPlaces = [];\n      state.isNearbyPlacesLoaded = false;\n    })\n    .addCase(changeFavorite, (state, action) => {\n      state.places = Util.getUpdatedPlaces(action.payload.id, state.places, action.payload.newPlace);\n    })\n    .addCase(resetFavorites, (state, action) => {\n      state.places = Util.resetFavoriteStates(action.payload);\n    });\n});\n\nexport {places};\n","import {createReducer} from '@reduxjs/toolkit';\nimport {loadComments, removeComments} from '../actions';\n\nconst initialState = {\n  comments: [],\n  isCommentsLoaded: false,\n};\n\nconst comments = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadComments, (state, action) => {\n      state.comments = action.payload;\n      state.isCommentsLoaded = true;\n    })\n    .addCase(removeComments, (state) => {\n      state.comments = [];\n      state.isCommentsLoaded = false;\n    });\n});\n\nexport {comments};\n","import {createReducer} from '@reduxjs/toolkit';\n\nimport {\n  changeLoadingCommentProcessStatus,\n  changeIsCommentSendedSuccessfullyStatus,\n  showErrorCommentFormMessage\n} from '../actions';\n\nconst initialState = {\n  isCommentSending: false,\n  isCommentFormSendedSuccessfully: null,\n  isShowCommentErrorMessage: false,\n  commentErrorMessage: null,\n};\n\nconst comment = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeLoadingCommentProcessStatus, (state, action) => {\n      state.isCommentSending = action.payload;\n    })\n    .addCase(changeIsCommentSendedSuccessfullyStatus, (state, action) => {\n      state.isCommentFormSendedSuccessfully = action.payload;\n    })\n    .addCase(showErrorCommentFormMessage, (state, action) => {\n      state.isShowCommentErrorMessage = action.payload.isShowErrorMessage;\n      state.commentErrorMessage = action.payload.errorMessageText;\n    });\n});\n\nexport {comment};\n","import {combineReducers} from 'redux';\nimport {user} from './user/user';\nimport {places} from './places/places';\nimport {comments} from './comments/comments';\nimport {comment} from './comment/comment';\n\nexport const NameSpace = {\n  PLACES: 'PLACES',\n  COMMENTS: 'COMMENTS',\n  USER: 'USER',\n  COMMENT: 'COMMENT',\n};\n\nexport default combineReducers({\n  [NameSpace.USER]: user,\n  [NameSpace.PLACES]: places,\n  [NameSpace.COMMENTS]: comments,\n  [NameSpace.COMMENT]: comment,\n});\n","import {NameSpace} from '../root-reducer';\n\nexport const getPlaces = (state) => state[NameSpace.PLACES].places;\nexport const getIsDataLoaded = (state) => state[NameSpace.PLACES].isDataLoaded;\nexport const getActiveCityName = (state) => state[NameSpace.PLACES].activeCityName;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {AppRoute} from '../../const';\nimport {resetFavorites} from '../../store/actions';\nimport {getPlaces} from '../../store/places/selectors';\nimport {logout} from '../../store/api-actions';\n\nfunction SignOut(props) {\n  const {login} = props;\n  const places = useSelector(getPlaces);\n\n  const dispatch = useDispatch();\n  const handleLogOutButtonClick = () => {\n    dispatch(logout());\n    dispatch(resetFavorites(places));\n  };\n\n  return (\n    <Fragment>\n      <li className=\"header__nav-item user\">\n        <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.FAVORITES}>\n          <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n          </div>\n          <span className=\"header__user-name user__name\">{login}</span>\n        </Link>\n      </li>\n      <li className=\"header__nav-item\">\n        <Link\n          className=\"header__nav-link\"\n          to={AppRoute.MAIN}\n          onClick={handleLogOutButtonClick}\n        >\n          <span className=\"header__signout\">Sign out</span>\n        </Link>\n      </li>\n    </ Fragment>\n  );\n}\n\nSignOut.propTypes = {\n  login: PropTypes.string,\n};\n\nexport default SignOut;\n","import {\n  changeLoadingCommentProcessStatus,\n  changeIsCommentSendedSuccessfullyStatus,\n  showErrorCommentFormMessage,\n  loadPlaces,\n  loadNearbyPlaces,\n  loadComments,\n  changeAuthorizationStatus,\n  changeLogin,\n  changeFavorite,\n  logout as userLogout,\n  redirectToRoute\n} from './actions';\n\nimport {AuthorizationStatus, APIRoute, AppRoute} from '../const';\nimport Util from '../util/util';\n\nexport const fetchPlacesList = () => (dispatch, _getState, api) => (\n  api.get(APIRoute.HOTELS)\n    .then(({data}) => {\n      const adaptedPlacesToClient = Util.adaptPlacesToClient(data);\n      dispatch(loadPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchNearbyPlacesList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.HOTELS }/${ id }/nearby`)\n    .then(({data}) => {\n      const adaptedPlacesToClient = Util.adaptPlacesToClient(data);\n      dispatch(loadNearbyPlaces(adaptedPlacesToClient));\n    })\n    .catch((err) => {})\n);\n\nexport const fetchCommentsList = (id) => (dispatch, _getState, api) => (\n  api.get(`${APIRoute.COMMENTS }/${id}`)\n    .then((info) => {\n      dispatch(loadComments(info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const addToFavorite = (id, isFavorite) => (dispatch, _getState, api) => (\n  api.post(`${APIRoute.FAVORITE }/${id}/${isFavorite ? 1 : 0}`)\n    .then((info) => {\n      dispatch(changeFavorite(id, info.data));\n    })\n    .catch((err) => {})\n);\n\nexport const login = ({login: email, password}) => (dispatch, _getState, api) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('login');\n  api.post(APIRoute.LOGIN, {email, password})\n    .then((info) => {\n      localStorage.setItem('token', info.data.token);\n      localStorage.setItem('login', info.data.email);\n      dispatch(changeLogin(info.data.email));\n      dispatch(changeAuthorizationStatus(AuthorizationStatus.AUTH));\n      dispatch(redirectToRoute(AppRoute.MAIN));\n    })\n    .catch((err) => {});\n};\n\nexport const sendComment = (id, comment, rating) => (dispatch, _getState, api) => {\n  dispatch(changeLoadingCommentProcessStatus(true));\n\n  api.post(`${APIRoute.COMMENTS}/${id}`, {comment, rating})\n    .then((info) => {\n      dispatch(loadComments(info.data));\n      dispatch(changeLoadingCommentProcessStatus(false));\n      dispatch(showErrorCommentFormMessage(false));\n      dispatch(changeIsCommentSendedSuccessfullyStatus(true));\n      /*\n      this additional bottom line was made for clean up a comment form\n      and establish \"isCommentFormSendedSuccessfully\" to \"false\"\n      to fix problem with save text in comment form after network error\n       */\n      dispatch(changeIsCommentSendedSuccessfullyStatus(false));\n    })\n    .catch((err) => {\n      dispatch(showErrorCommentFormMessage(true, err.message));\n      dispatch(changeLoadingCommentProcessStatus(false));\n      dispatch(changeIsCommentSendedSuccessfullyStatus(false));\n    });\n};\n\nexport const logout = () => (dispatch, _getState, api) => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('login');\n\n  api.delete(APIRoute.LOGOUT)\n    .then(() => {\n      dispatch(userLogout());\n    });\n};\n","import {NameSpace} from '../root-reducer';\n\nexport const getAuthorizationStatus = (state) => state[NameSpace.USER].authorizationStatus;\nexport const getLogin = (state) => state[NameSpace.USER].login;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SignIn from '../sign-in/sign-in';\nimport SignOut from '../sign-out/sign-out';\nimport {AuthorizationStatus} from '../../const';\nimport {getAuthorizationStatus, getLogin} from '../../store/user/selectors';\n\nfunction Layout(props) {\n  const {children, className} = props;\n  const login = useSelector(getLogin);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <div className={className}>\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link header__logo-link--active\" to=\"/\">\n                <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                {authorizationStatus === AuthorizationStatus.AUTH\n                  ? <SignOut login={login} />\n                  : <SignIn/>}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n      {children}\n    </ div>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport default Layout;\n","import React from 'react';\nimport Layout from '../layout/layout';\n\nconst withLayout = (Component, className) =>\n  function wrapper(props) {\n    return (\n      <Layout className={className}>\n        <Component {...props} />\n      </Layout>\n    );\n  };\n\nwithLayout.displayName = 'withLayout';\n\nexport default withLayout;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {cityList, SortByValues} from '../../const';\nimport {changeCity} from '../../store/actions';\nimport {changeSortBy} from '../../store/actions';\nimport {getActiveCityName} from '../../store/places/selectors';\n\nfunction Tabs(props) {\n  const activeCityName = useSelector(getActiveCityName);\n  const dispatch = useDispatch();\n\n  const handleTabClick = (evt) => {\n    evt.preventDefault();\n    dispatch(changeCity(evt.currentTarget.dataset.city));\n    dispatch(changeSortBy(SortByValues.POPULAR));\n  };\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {cityList.map((city) => (\n            <li className=\"locations__item\" key={city}>\n              <Link\n                data-city={city}\n                className={`locations__item-link tabs__item ${ city === activeCityName && 'tabs__item--active' }`}\n                to=\"#\"\n                onClick={handleTabClick}\n              >\n                <span>{city}</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction MainEmpty(props) {\n  const {activeCityName} = props;\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No places to stay available</b>\n            <p className=\"cities__status-description\">We could not find any property available at the moment in {activeCityName}</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\" />\n      </div>\n    </div>\n  );\n}\n\nMainEmpty.propTypes = {\n  activeCityName: PropTypes.string.isRequired,\n};\n\nexport default MainEmpty;\n","import {React} from 'react';\nimport {useSelector} from 'react-redux';\n\n// import RoomList from '../room-list/room-list';\nimport withLayout from '../hocs/with-layout';\nimport Tabs from '../tabs/tabs';\nimport Util from '../../util/util';\nimport MainEmpty from '../main-empty/main-empty';\nimport {getPlaces, getActiveCityName} from '../../store/places/selectors';\n\nfunction Main() {\n  const activeCityName = useSelector(getActiveCityName);\n  const places = useSelector(getPlaces);\n\n  const filteredPlaces = Util.getFilteredPlaces(activeCityName, places);\n\n  return (\n    <main className=\"page__main page__main--index\">\n      <h1 className=\"visually-hidden\">Cities</h1>\n      <Tabs />\n      {\n        filteredPlaces.length === 0\n          ? <MainEmpty activeCityName={activeCityName}/>\n          : (\n            <div className=\"cities\">\n              <div className=\"cities__places-container container\">\n                <section className=\"cities__places places\">\n                  <h2 className=\"visually-hidden\">Places</h2>\n                  <b className=\"places__found\">{filteredPlaces.length} places to stay in {activeCityName}</b>\n                  {/* <RoomList places={filteredPlaces} /> */}\n                </section>\n              </div>\n            </div>\n          )\n      }\n    </main>\n  );\n}\n\nconst withLayoutMain = withLayout(Main);\nexport default withLayoutMain;\n","import React, {useRef} from 'react';\nimport {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\n\nimport {login} from '../../store/api-actions';\n\nfunction Login() {\n  const loginRef = useRef();\n  const passwordRef = useRef();\n  const dispatch = useDispatch();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    dispatch(login({\n      login: loginRef.current.value,\n      password: passwordRef.current.value,\n    }));\n  };\n\n  return (\n    <Fragment>\n      <div style={{display: 'none'}}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\"><symbol id=\"icon-arrow-select\" viewBox=\"0 0 7 4\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 0l3.5 2.813L7 0v1.084L3.5 4 0 1.084V0z\" /></symbol><symbol id=\"icon-bookmark\" viewBox=\"0 0 17 18\"><path d=\"M3.993 2.185l.017-.092V2c0-.554.449-1 .99-1h10c.522 0 .957.41.997.923l-2.736 14.59-4.814-2.407-.39-.195-.408.153L1.31 16.44 3.993 2.185z\" /></symbol><symbol id=\"icon-star\" viewBox=\"0 0 13 12\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.5 9.644L10.517 12 9.451 7.56 13 4.573l-4.674-.386L6.5 0 4.673 4.187 0 4.573 3.549 7.56 2.483 12 6.5 9.644z\" /></symbol></svg>\n      </div>\n      <div className=\"page page--gray page--login\">\n        <header className=\"header\">\n          <div className=\"container\">\n            <div className=\"header__wrapper\">\n              <div className=\"header__left\">\n                <Link className=\"header__logo-link\" to=\"/\">\n                  <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width={81} height={41} />\n                </Link>\n              </div>\n              <nav className=\"header__nav\">\n                <ul className=\"header__nav-list\">\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </header>\n        <main className=\"page__main page__main--login\">\n          <div className=\"page__login-container container\">\n            <section className=\"login\">\n              <h1 className=\"login__title\">Sign in</h1>\n              <form\n                className=\"login__form form\"\n                action=\"\"\n                method=\"post\"\n                onSubmit={handleSubmit}\n              >\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">E-mail</label>\n                  <input\n                    ref={loginRef}\n                    className=\"login__input form__input\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    required\n                  />\n                </div>\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <label className=\"visually-hidden\">Password</label>\n                  <input\n                    ref={passwordRef}\n                    className=\"login__input form__input\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n                <button\n                  className=\"login__submit form__submit button\"\n                  type=\"submit\"\n                >\n                  Sign in\n                </button>\n              </form>\n            </section>\n            <section className=\"locations locations--login locations--current\">\n              <div className=\"locations__item\">\n                <Link className=\"locations__item-link\" to=\"/\">\n                  <span>Amsterdam</span>\n                </Link>\n              </div>\n            </section>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport withLayout from '../hocs/with-layout';\n\nfunction NotFound() {\n  return (\n    <div style={{margin: 'auto', width: '200px'}}>\n      <h1 style={{textAlign: 'center'}}>404</h1>\n      <h2>Page Not Found</h2>\n    </div>\n  );\n}\n\nconst withLayoutNotFound = withLayout(NotFound);\nexport default withLayoutNotFound;\n","import React from 'react';\n\nfunction LoadingScreen() {\n  return (\n    <p>Loading...</p>\n  );\n}\n\nexport default LoadingScreen;\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport {Switch, Route, Router as BrowserRouter} from 'react-router-dom';\n\nimport {AppRoute} from '../../const';\nimport Main from '../main/main';\nimport Login from '../login/login';\nimport Error from '../not-found/not-found';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport browserHistory from '../../browser-history';\nimport {getIsDataLoaded} from '../../store/places/selectors';\n\nfunction App() {\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  if (!isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <BrowserRouter history={browserHistory}>\n      <Switch>\n        <Route exact path={AppRoute.MAIN}>\n          <Main className=\"page page--gray page--index\" />\n        </Route>\n        <Route exact path={AppRoute.SIGN_IN}>\n          <Login />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import browserHistory from '../../browser-history';\nimport {ActionType} from '../actions';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {configureStore} from '@reduxjs/toolkit';\nimport {Provider} from 'react-redux';\n\nimport {getAxiosInstance} from './services/api';\nimport App from './components/app/app';\nimport rootReducer from './store/root-reducer';\nimport {fetchPlacesList} from './store/api-actions';\nimport {redirect} from './store/middlewares/redirect';\nimport Util from './util/util';\nimport reportWebVitals from './reportWebVitals';\n\nconst api = getAxiosInstance();\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nUtil.getIsTokenExist(store.dispatch);\nstore.dispatch(fetchPlacesList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}